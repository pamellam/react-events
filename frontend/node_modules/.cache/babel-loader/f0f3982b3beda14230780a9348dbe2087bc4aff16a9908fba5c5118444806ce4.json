{"ast":null,"code":"var _jsxFileName = \"/Users/pamelamladenova/Documents/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\n\n// export async function action({ request, params }) {\n//   const data = await request.formData();\n\n//   const eventData = {\n//     title: data.get('title'),\n//     image: data.get('image'),\n//     date: data.get('date'),\n//     description: data.get('description'),\n//   };\n\n//   const response = await fetch('http://localhost:8080/events', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n\n//   if (!response.status === 422) {\n//     return response;\n//   }\n\n//   if (!response.ok) {\n//     throw json({ message: 'Could not save the event.' }, { status: 500 });\n//   }\n\n//   return redirect('/events');\n// }\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pamelamladenova/Documents/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\nimport EventForm from '../components/EventForm';\n\nconst NewEventPage = () => {\n  return <EventForm />;\n};\n\nexport default NewEventPage;\n\n// export async function action({ request, params }) {\n//   const data = await request.formData();\n\n//   const eventData = {\n//     title: data.get('title'),\n//     image: data.get('image'),\n//     date: data.get('date'),\n//     description: data.get('description'),\n//   };\n\n//   const response = await fetch('http://localhost:8080/events', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n\n//   if (!response.status === 422) {\n//     return response;\n//   }\n\n//   if (!response.ok) {\n//     throw json({ message: 'Could not save the event.' }, { status: 500 });\n//   }\n\n//   return redirect('/events');\n// }\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAIlB,eAAeA,YAAY;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}